name: Build, Push Docker Image, and Update README

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # This cron expression runs the workflow every Sunday at midnight UTC

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base_image:
        # https://mcr.microsoft.com/product/dotnet/aspnet/tags
#          - mcr.microsoft.com/dotnet/aspnet:8.0-bookworm-slim
#          - mcr.microsoft.com/dotnet/aspnet:8.0-jammy
          - mcr.microsoft.com/dotnet/aspnet:8.0
        arch:
          - linux/amd64
#          - linux/arm64
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from base image
      id: extract_version
      run: echo "VERSION=$(echo ${{ matrix.base_image }} | cut -d':' -f2)" >> $GITHUB_ENV

    - name: Get current date
      id: get_date
      run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: ${{ matrix.arch }}
        push: true
        tags: |
          nrivett/temp-aspnet-playwright:${{ env.VERSION }}
          nrivett/temp-aspnet-playwright:${{ env.VERSION }}-${{ env.DATE }}
        build-args: |
          BASE_IMAGE=${{ matrix.base_image }}

    - name: Obtain Bearer Token
      id: get_token
      run: |
        TOKEN=$(curl -s -X POST https://hub.docker.com/v2/users/login \
          -H "Content-Type: application/json" \
          -d '{"username": "${{ secrets.DOCKER_USERNAME }}", "password": "${{ secrets.DOCKER_PASSWORD }}"}' | jq -r .token)
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Update Docker Hub README
      if: github.ref == 'refs/heads/main'
      env:
        TOKEN: ${{ env.TOKEN }}
      run: |
        DESCRIPTION=$(cat README.md | jq -sR '.' | sed 's/\\n/\\n/g')
        curl -v -X PATCH \
          -H "Authorization: Bearer $TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"full_description\": $DESCRIPTION}" \
          https://hub.docker.com/v2/repositories/nrivett/temp-aspnet-playwright/